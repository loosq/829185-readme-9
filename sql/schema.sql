-- MySQL Script generated by MySQL Workbench
-- Tue Apr 30 16:43:46 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema readme
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema readme
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `readme` DEFAULT CHARACTER SET utf8 ;
USE `readme` ;

-- -----------------------------------------------------
-- Table `readme`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `registration_date` DATETIME NOT NULL,
  `email` VARCHAR(225) NOT NULL,
  `name` VARCHAR(225) NOT NULL,
  `password` VARCHAR(225) NOT NULL,
  `avatar` VARCHAR(225) NULL,
  `contact_info` VARCHAR(225) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idusers_UNIQUE` (`id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`content_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`content_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC));


-- -----------------------------------------------------
-- Table `readme`.`posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`posts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `post_date` DATETIME NOT NULL,
  `title` TEXT(120) NOT NULL,
  `content` TEXT NOT NULL,
  `quote_author` VARCHAR(225) NULL,
  `img_url` VARCHAR(225) NULL,
  `video_url` VARCHAR(225) NULL,
  `users_site_url` VARCHAR(225) NULL,
  `number_of_views` INT NOT NULL DEFAULT 0,
  `users_id` INT NOT NULL,
  `content_types_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `users_to_posts_idx` (`users_id` ASC),
  INDEX `fk_posts_content_types1_idx` (`content_types_id` ASC),
  CONSTRAINT `users_to_posts`
    FOREIGN KEY (`users_id`)
    REFERENCES `readme`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `posts_to_content_types`
    FOREIGN KEY (`content_types_id`)
    REFERENCES `readme`.`content_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `data_time_of_origin` DATETIME NOT NULL,
  `text` TEXT NOT NULL,
  `users_id` INT NOT NULL,
  `post_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_comment_users1_idx` (`users_id` ASC),
  INDEX `fk_comment_post1_idx` (`post_id` ASC),
  CONSTRAINT `users_to_comments`
    FOREIGN KEY (`users_id`)
    REFERENCES `readme`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `posts_to_comments`
    FOREIGN KEY (`post_id`)
    REFERENCES `readme`.`posts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`messages` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_of_origin` DATETIME NOT NULL,
  `text` TEXT NOT NULL,
  `users_id_send` INT NOT NULL,
  `users_id_get` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_message_users1_idx` (`users_id_send` ASC),
  INDEX `fk_messages_users1_idx` (`users_id_get` ASC),
  CONSTRAINT `users_to_messages`
    FOREIGN KEY (`users_id_send`)
    REFERENCES `readme`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_messages_users1`
    FOREIGN KEY (`users_id_get`)
    REFERENCES `readme`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `readme`.`subscribers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`subscribers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `users_id` INT NULL DEFAULT NULL,
  `users_subscribe_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_subscribe_users1_idx` (`users_id` ASC, `users_subscribe_id` ASC),
  CONSTRAINT `users_to_subscribers`
    FOREIGN KEY (`users_id`)
    REFERENCES `readme`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `readme`.`hashtags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`hashtags` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(225) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC));


-- -----------------------------------------------------
-- Table `readme`.`likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`likes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `posts_id` INT NOT NULL,
  `users_id` INT NOT NULL,
  `likes` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_posts_has_users_users1_idx` (`users_id` ASC),
  INDEX `fk_posts_has_users_posts1_idx` (`posts_id` ASC, `id` ASC),
  UNIQUE INDEX `posts_likes_id_UNIQUE` (`id` ASC),
  CONSTRAINT `fk_posts_has_users_posts1`
    FOREIGN KEY (`posts_id`)
    REFERENCES `readme`.`posts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_posts_has_users_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `readme`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`posts_has_hashtags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`posts_has_hashtags` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `posts_id` INT NULL,
  `hashtags_id` INT NULL DEFAULT NULL,
  INDEX `fk_posts_has_hashtags_hashtags1_idx` (`hashtags_id` ASC),
  INDEX `fk_posts_has_hashtags_posts1_idx` (`posts_id` ASC),
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `posts_to_hashtags`
    FOREIGN KEY (`posts_id`)
    REFERENCES `readme`.`posts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hashtags_to_posts`
    FOREIGN KEY (`hashtags_id`)
    REFERENCES `readme`.`hashtags` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `readme`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `readme`;
INSERT INTO `readme`.`users` (`id`, `registration_date`, `email`, `name`, `password`, `avatar`, `contact_info`) VALUES (1, '2019-01-04 14:32:01', 'larisa@mail.ru', 'Лариса', 'qwerty', 'userpic-larisa-small.jpg', '');
INSERT INTO `readme`.`users` (`id`, `registration_date`, `email`, `name`, `password`, `avatar`, `contact_info`) VALUES (2, '2012-01-01 13:31:49', 'vlados666@bk.ru', 'Владик', 'lth;bvtyzrhtgxt1488', 'userpic.jpg', NULL);
INSERT INTO `readme`.`users` (`id`, `registration_date`, `email`, `name`, `password`, `avatar`, `contact_info`) VALUES (3, '2019-04-01 18:32:01', 'victorian@gmail.com', 'Виктор', 'jj~lLasldla341kdlaj', 'userpic-mark.jpg', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `readme`.`content_types`
-- -----------------------------------------------------
START TRANSACTION;
USE `readme`;
INSERT INTO `readme`.`content_types` (`id`, `type`) VALUES (1, 'text');
INSERT INTO `readme`.`content_types` (`id`, `type`) VALUES (2, 'quote');
INSERT INTO `readme`.`content_types` (`id`, `type`) VALUES (3, 'picture');
INSERT INTO `readme`.`content_types` (`id`, `type`) VALUES (4, 'video');
INSERT INTO `readme`.`content_types` (`id`, `type`) VALUES (5, 'url');

COMMIT;


-- -----------------------------------------------------
-- Data for table `readme`.`posts`
-- -----------------------------------------------------
START TRANSACTION;
USE `readme`;
INSERT INTO `readme`.`posts` (`id`, `post_date`, `title`, `content`, `quote_author`, `img_url`, `video_url`, `users_site_url`, `number_of_views`, `users_id`, `content_types_id`) VALUES (1, '2019-04-24 16:00:53', 'Цитата', 'Мы в жизни любим только раз, а после ищем лишь похожих', NULL, NULL, NULL, NULL, 1213, 1, 2);
INSERT INTO `readme`.`posts` (`id`, `post_date`, `title`, `content`, `quote_author`, `img_url`, `video_url`, `users_site_url`, `number_of_views`, `users_id`, `content_types_id`) VALUES (2, '2019-04-23 03:00:23', 'Игра престолов', 'Не могу дождаться начала финального сезона своего любимого сериала!', NULL, NULL, NULL, NULL, 1, 2, 1);
INSERT INTO `readme`.`posts` (`id`, `post_date`, `title`, `content`, `quote_author`, `img_url`, `video_url`, `users_site_url`, `number_of_views`, `users_id`, `content_types_id`) VALUES (3, '2019-04-22 11:20:43', 'Наконец, обработал фотки!', 'rock-medium.jpg', NULL, 'rock-medium.jpg', NULL, '', 22, 3, 3);
INSERT INTO `readme`.`posts` (`id`, `post_date`, `title`, `content`, `quote_author`, `img_url`, `video_url`, `users_site_url`, `number_of_views`, `users_id`, `content_types_id`) VALUES (4, '2019-04-23 19:42:21', 'Моя мечта', 'coast-medium.jpg', NULL, 'coast-medium.jpg', NULL, NULL, 3123, 1, 3);
INSERT INTO `readme`.`posts` (`id`, `post_date`, `title`, `content`, `quote_author`, `img_url`, `video_url`, `users_site_url`, `number_of_views`, `users_id`, `content_types_id`) VALUES (5, '2019-04-24 01:21:19', 'Лучшие курсы', 'www.htmlacademy.ru', NULL, NULL, NULL, NULL, 100, 2, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `readme`.`comments`
-- -----------------------------------------------------
START TRANSACTION;
USE `readme`;
INSERT INTO `readme`.`comments` (`id`, `data_time_of_origin`, `text`, `users_id`, `post_id`) VALUES (1, '2019-04-24 14:00:03', 'LOL!', 2, 1);
INSERT INTO `readme`.`comments` (`id`, `data_time_of_origin`, `text`, `users_id`, `post_id`) VALUES (2, '2019-04-22 14:00:03', '<3', 1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `readme`.`likes`
-- -----------------------------------------------------
START TRANSACTION;
USE `readme`;
INSERT INTO `readme`.`likes` (`id`, `posts_id`, `users_id`, `likes`) VALUES (1, 1, 1, 0);
INSERT INTO `readme`.`likes` (`id`, `posts_id`, `users_id`, `likes`) VALUES (2, 2, 2, 0);

COMMIT;

