-- MySQL Script generated by MySQL Workbench
-- Tue Apr 23 15:41:15 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema readme
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema readme
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `readme` DEFAULT CHARACTER SET utf8 ;
USE `readme` ;

-- -----------------------------------------------------
-- Table `readme`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `registration_date` DATE NOT NULL,
  `email` VARCHAR(225) NOT NULL,
  `name` VARCHAR(225) NOT NULL,
  `password` VARCHAR(225) NOT NULL,
  `avatar` VARCHAR(225) NULL,
  `contact_info` VARCHAR(225) NULL,
  `subscribe_id` INT NOT NULL,
  PRIMARY KEY (`id`, `subscribe_id`),
  UNIQUE INDEX `idusers_UNIQUE` (`id` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`posts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`posts` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `post_date` DATETIME NOT NULL,
  `title` TEXT(120) NOT NULL,
  `text` TEXT NOT NULL,
  `quote_author` VARCHAR(225) NULL,
  `img_url` VARCHAR(225) NULL,
  `video_url` VARCHAR(225) NULL,
  `users_site_url` VARCHAR(225) NULL,
  `number_of_views` INT NULL DEFAULT 0,
  `users_id` INT NOT NULL,
  `users_subscribe_id` INT NOT NULL,
  PRIMARY KEY (`id`, `users_id`, `users_subscribe_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_post_users_idx` (`users_id` ASC, `users_subscribe_id` ASC),
  CONSTRAINT `users_to_posts`
    FOREIGN KEY (`users_id` , `users_subscribe_id`)
    REFERENCES `readme`.`users` (`id` , `subscribe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`comments` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `data_time_of_origin` DATETIME NOT NULL,
  `text` TEXT NOT NULL,
  `users_id` INT NOT NULL,
  `users_subscribe_id` INT NOT NULL,
  `post_id` INT NOT NULL,
  `post_users_id` INT NOT NULL,
  `post_users_subscribe_id` INT NOT NULL,
  PRIMARY KEY (`id`, `users_id`, `users_subscribe_id`, `post_id`, `post_users_id`, `post_users_subscribe_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_comment_users1_idx` (`users_id` ASC, `users_subscribe_id` ASC),
  INDEX `fk_comment_post1_idx` (`post_id` ASC, `post_users_id` ASC, `post_users_subscribe_id` ASC),
  CONSTRAINT `users_to_comments`
    FOREIGN KEY (`users_id` , `users_subscribe_id`)
    REFERENCES `readme`.`users` (`id` , `subscribe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `posts_to_comments`
    FOREIGN KEY (`post_id` , `post_users_id` , `post_users_subscribe_id`)
    REFERENCES `readme`.`posts` (`id` , `users_id` , `users_subscribe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`likes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`likes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_like` VARCHAR(225) NOT NULL DEFAULT 0,
  `post_liked` VARCHAR(225) NOT NULL DEFAULT 0,
  `users_id` INT NOT NULL,
  `users_subscribe_id` INT NOT NULL,
  `post_id` INT NOT NULL,
  `post_users_id` INT NOT NULL,
  `post_users_subscribe_id` INT NOT NULL,
  PRIMARY KEY (`id`, `users_id`, `users_subscribe_id`, `post_id`, `post_users_id`, `post_users_subscribe_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_like_users1_idx` (`users_id` ASC, `users_subscribe_id` ASC),
  INDEX `fk_like_post1_idx` (`post_id` ASC, `post_users_id` ASC, `post_users_subscribe_id` ASC),
  CONSTRAINT `users_to_likes`
    FOREIGN KEY (`users_id` , `users_subscribe_id`)
    REFERENCES `readme`.`users` (`id` , `subscribe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `posts_to_likes`
    FOREIGN KEY (`post_id` , `post_users_id` , `post_users_subscribe_id`)
    REFERENCES `readme`.`posts` (`id` , `users_id` , `users_subscribe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`messages`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`messages` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date_of_origin` DATETIME NOT NULL,
  `text` TEXT NOT NULL,
  `users_id` INT NOT NULL,
  `users_subscribe_id` INT NOT NULL,
  PRIMARY KEY (`id`, `users_id`, `users_subscribe_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_message_users1_idx` (`users_id` ASC, `users_subscribe_id` ASC),
  CONSTRAINT `users_to_messages`
    FOREIGN KEY (`users_id` , `users_subscribe_id`)
    REFERENCES `readme`.`users` (`id` , `subscribe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `readme`.`subscribers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`subscribers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_subscriber` VARCHAR(225) NOT NULL,
  `user_author` VARCHAR(45) NULL,
  `users_id` INT NOT NULL,
  `users_subscribe_id` INT NOT NULL,
  PRIMARY KEY (`id`, `users_id`, `users_subscribe_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_subscribe_users1_idx` (`users_id` ASC, `users_subscribe_id` ASC),
  CONSTRAINT `users_to_subscribers`
    FOREIGN KEY (`users_id` , `users_subscribe_id`)
    REFERENCES `readme`.`users` (`id` , `subscribe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `readme`.`hashtags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`hashtags` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(225) NOT NULL,
  `post_id` INT NOT NULL,
  `post_users_id` INT NOT NULL,
  `post_users_subscribe_id` INT NOT NULL,
  PRIMARY KEY (`id`, `post_id`, `post_users_id`, `post_users_subscribe_id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_hashtags_post1_idx` (`post_id` ASC, `post_users_id` ASC, `post_users_subscribe_id` ASC),
  CONSTRAINT `posts_to_hashtags`
    FOREIGN KEY (`post_id` , `post_users_id` , `post_users_subscribe_id`)
    REFERENCES `readme`.`posts` (`id` , `users_id` , `users_subscribe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `readme`.`content_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`content_types` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `text` TINYINT NOT NULL,
  `quote` TINYINT NOT NULL,
  `picture` TINYINT NOT NULL,
  `video` TINYINT NOT NULL,
  `url` TINYINT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `posts_to_type`
    FOREIGN KEY (`id`)
    REFERENCES `readme`.`posts` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
